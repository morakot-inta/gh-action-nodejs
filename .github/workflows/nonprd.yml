name: Non-Production workflow
on:
  workflow_dispatch:
  push:
    branches:
      - 'main' 
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      # - '.github/workflows/**'

jobs:
  setup-image-tag:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/morakot-inta/gh-action-nodejs
      DEPLOY_ENV: dev 
      PORT: 8080
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: setup tag image with sha
        id: tag_image
        run: |
          COMMIT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "SHA_TAG=${{ env.IMAGE_NAME }}:${{ env.DEPLOY_ENV }}-${COMMIT_SHA}" >> $GITHUB_ENV
    outputs:
      SHA_TAG: ${{ env.SHA_TAG }} 

  build-and-push:
    needs: setup-image-tag
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      IMAGE_NAME: ghcr.io/morakot-inta/gh-action-nodejs
      DEPLOY_ENV: dev
      PORT: 8080
      SHA_TAG: ${{ needs.setup-image-tag.outputs.SHA_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: verify tag image
        run: |
          echo "SHA_TAG from env: ${{ env.SHA_TAG }}"  
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.SHA_TAG }}
          build-args: |
            PORT=${{ env.PORT }}
  
  trivy-sca-security-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Trivy SCA Vulnerability Fail Gate
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.setup-image-tag.outputs.SHA_TAG }}
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true
          vuln-type: 'os,library'
          timeout: '10m'
          scan-type: 'image'

  
    


